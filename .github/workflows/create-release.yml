name: Create Releases

on:
  push:
    branches:
      - main

jobs:
  create-server-release:
    runs-on: ubuntu-latest
    if: github.ref_name == 'main'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install GitHub CLI
        run: |
          sudo apt update
          sudo apt install gh -y

      - name: Generate Unique Server Tag
        id: generate_server_tag
        run: |
          BASE_TAG="server-v$(date +'%Y-%m-%d')"
          UNIQUE_SUFFIX=$(date +%s)
          TAG="${BASE_TAG}-${UNIQUE_SUFFIX}"
          echo "TAG=$TAG" >> $GITHUB_ENV
          echo "Generated server tag: $TAG"

      - name: Create Server ZIP Archive
        run: |
          mkdir -p server-build
          cp -r mods server-build/
          cp forge-installer.jar server-build/
          cd server-build
          zip -r cofemine-server.zip .
          mv cofemine-server.zip ../
          cd ..
          ls -lh cofemine-server.zip

      - name: Create Server Release
        id: create_server_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.TAG }}
          release_name: "Server Release ${{ env.TAG }}"
          body: "Серверный релиз ${{ env.TAG }}."
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Upload Server Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_server_release.outputs.upload_url }}
          asset_path: cofemine-server.zip
          asset_name: cofemine-server.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Update 'latest-server' Tag
        run: |
          git fetch origin
          git tag -f latest-server ${{ env.TAG }}
          git push origin --force latest-server
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

  create-client-release:
    runs-on: ubuntu-latest
    needs: create-server-release
    steps:
      - name: Checkout Client Branch
        uses: actions/checkout@v2
        with:
          ref: client
          path: client-repo

      - name: Checkout Server Branch
        uses: actions/checkout@v2
        with:
          ref: main
          path: server-repo

      - name: Merge Files for Client Build
        run: |
          mkdir -p client-build
          cp -r client-repo/mods client-build/
          cp -r client-repo/resourcepacks client-build/
          cp server-repo/forge-installer.jar client-build/
          cd client-build
          zip -r cofemine-client.zip .
          mv cofemine-client.zip ../
          cd ..
          ls -lh cofemine-client.zip

      - name: Generate Unique Client Tag
        id: generate_client_tag
        run: |
          BASE_TAG="client-v$(date +'%Y-%m-%d')"
          UNIQUE_SUFFIX=$(date +%s)
          TAG_CLIENT="${BASE_TAG}-${UNIQUE_SUFFIX}"
          echo "TAG_CLIENT=$TAG_CLIENT" >> $GITHUB_ENV
          echo "Generated client tag: $TAG_CLIENT"

      - name: Create Client Release
        id: create_client_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.TAG_CLIENT }}
          release_name: "Client Release ${{ env.TAG_CLIENT }}"
          body: "Автоматический клиентский релиз ${{ env.TAG_CLIENT }}."
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Upload Client Release Asset
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_client_release.outputs.upload_url }}
          asset_path: cofemine-client.zip
          asset_name: cofemine-client.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}

      - name: Update 'latest-client' Tag
        run: |
          git fetch origin
          git tag -f latest-client ${{ env.TAG_CLIENT }}
          git push origin --force latest-client
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
